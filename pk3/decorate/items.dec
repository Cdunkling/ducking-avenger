ACTOR MissileAmmo : Ammo replaces Shell
{
    Inventory.PickupMessage "Picked up a Missile."
    Inventory.PickupSound "item/get"
    Inventory.Amount 1
    Inventory.MaxAmount 5
    Ammo.BackpackAmount 1
    Ammo.BackpackMaxAmount 5
    Inventory.Icon "MPKUA0"
    +NOGRAVITY
    States
    {
    Spawn:
        MPKU A 10 BRIGHT
        MPKU B 4 BRIGHT
        loop
    }
}

ACTOR MissileAmmo_Dropped : MissileAmmo
{
    States
    {
    Spawn:
        TNT1 A 0 A_JumpIfInventory("Health100",70,"RemoveCheck")
        MPKU A 10 BRIGHT A_GiveInventory("Health100",1)
        MPKU B 4 BRIGHT
        loop
    RemoveCheck:
        TNT1 A 0
        TNT1 A 0 A_TakeInventory("Health100",100)
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,16,0,0) == 1,"Spawn")
        TNT1 A 0
        stop
    }
}

actor SuperMissileAmmo : Ammo
{
    Inventory.PickupMessage "Picked up a Super Missile."
    Inventory.PickupSound "item/get"
    Inventory.Amount 1
    Inventory.MaxAmount 0
    Ammo.BackpackAmount 1
    Ammo.BackpackMaxAmount 0
    Inventory.Icon "SPKUA0"
    Scale 1.1
    +NOGRAVITY
    +IGNORESKILL
    States
    {
    Spawn:
        SPKU A 10 BRIGHT
        SPKU B 4 BRIGHT
        loop
    }
}

actor SuperMissileAmmo_Dropped : CustomInventory
{
    //Speed 5
    //Height 1
    //Radius 1
    Inventory.PickupMessage "Picked up a Super Missile."
    Inventory.PickupSound "item/get"
    Scale 1.1
    +NOGRAVITY
    +IGNORESKILL
    /*MONSTER          // It would be so nice if this worked.
    +BLOODLESSIMPACT   // Then I could do what Metroid Prime
    +PAINLESS          // did and turn the Charge Beam into
    -SOLID             // some sort of magnetized item picker-
    -SHOOTABLE         // upper grabby thing.
    -ISMONSTER
    +NOCLIP*/
    States
    {
    Spawn:
        TNT1 A 0 A_JumpIfInventory("Health100",70,"RemoveCheck")
        TNT1 A 0 A_GiveInventory("Health100",1)
        SPKU AAAAAAAAAA 1 BRIGHT A_Look
        SPKU BBBB 1 BRIGHT A_Look
        TNT1 A 0 A_Stop
        loop
    RemoveCheck:
        TNT1 A 0
        TNT1 A 0 A_TakeInventory("Health100",100)
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,16,0,0) == 1,"Spawn")
        TNT1 A 0
        stop
    Pickup:
        TNT1 A 0
        TNT1 A 0 A_JumpIfInventory("SuperMissileAmmo",0,"PickupFail")
        TNT1 A 0 A_JumpIfInventory("SuperMissileAcquired",1,1)
        goto PickupFail
        TNT1 A 0
        TNT1 A 0 A_GiveInventory("SuperMissileAmmo",1)
        TNT1 A 1
        stop
    PickupFail:
        TNT1 A 0
        //SPKU A 1 BRIGHT // This is required, else it'll cause a crash.
        fail

    /*See:
        TNT1 A 0 A_JumpIfInTargetInventory("PowerBeamChargeLevel",10,"CheckDist")
    SeeCont:
        TNT1 A 0 A_JumpIfInventory("Health100",70,"RemoveCheck")
        TNT1 A 0 A_GiveInventory("Health100",1)
        SPKU AAAAAAAAAA 1 BRIGHT A_Stop
        SPKU BBBB 1 BRIGHT A_Stop
        TNT1 A 0 A_JumpIfTargetInLos("See",140)
        Goto Spawn
    CheckDist:
        TNT1 A 0 A_JumpIfCloser(1024,"DrawIn")
        SPKU A 1 A_Stop
        Goto See
    DrawIn:
        TNT1 A 0 A_JumpIfInTargetInventory("PowerBeamChargeLevel",10,1)
        Goto See
        TNT1 A 0 A_FaceTarget
        SPKU A 1 BRIGHT A_SkullAttack(5)
        TNT1 A 0 A_JumpIfCloser(16,"Pickup")
        Goto See*/
    }
}

actor PowerBombAmmo : Ammo
{
    Inventory.PickupMessage "Picked up a Power Bomb."
    Inventory.PickupSound "item/get"
    Inventory.Amount 1
    Inventory.MaxAmount 0
    Ammo.BackpackAmount 1
    Ammo.BackpackMaxAmount 0
    Inventory.Icon "PBOMD0"
    Scale 1.1
    +NOGRAVITY
    +IGNORESKILL
    States
    {
    Spawn:
        PBOM D 10 BRIGHT
        PBOM E 4 BRIGHT
        loop
    }
}

actor PowerBombAmmo_Dropped : CustomInventory
{
    Inventory.PickupMessage "Picked up a Power Bomb."
    Inventory.PickupSound "item/get"
    Scale 1.1
    +NOGRAVITY
    +IGNORESKILL
    States
    {
    Spawn:
        TNT1 A 0 A_JumpIfInventory("Health100",70,"RemoveCheck")
        PBOM D 10 BRIGHT A_GiveInventory("Health100",1)
        PBOM E 4 BRIGHT
        loop
    RemoveCheck:
        TNT1 A 0
        TNT1 A 0 A_TakeInventory("Health100",100)
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,16,0,0) == 1,"Spawn")
        TNT1 A 0
        stop
    Pickup:
        TNT1 A 0
        TNT1 A 0 A_JumpIfInventory("PowerBombAmmo",0,"PickupFail")
        TNT1 A 0 A_JumpIfInventory("PowerBombAcquired",1,1)
        goto PickupFail
        TNT1 A 0
        TNT1 A 0 A_GiveInventory("PowerBombAmmo",1)
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

actor Energy10 : Health replaces Stimpack
{
    Inventory.Amount 15
    Inventory.PickupMessage "Picked up a small energy capsule."
    Inventory.PickupSound "health/10"
    Renderstyle Add
    Alpha 0.975
    Scale 0.7
    +NOGRAVITY
    States
    {
    Spawn:
        NRGA ABCD 4 BRIGHT
        NRGA ABCD 4
        loop
    }
}

ACTOR Energy10_Dropped : Energy10
{
    States
    {
    Spawn:
        TNT1 A 0 A_JumpIfInventory("Health100",31,"RemoveCheck")
        TNT1 A 0 A_GiveInventory("Health100",1)
        NRGA ABCD 4 BRIGHT
        NRGA ABCD 4
        loop
    RemoveCheck:
        TNT1 A 0
        TNT1 A 0 A_TakeInventory("Health100",100)
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,16,0,0) == 1,"Spawn")
        TNT1 A 0
        stop
    }
}

actor Energy25 : Health replaces Medikit
{
    Inventory.Amount 30
    Inventory.PickupMessage "Picked up a large energy capsule."
    Inventory.PickupSound "health/25"
    Renderstyle Add
    Scale 1
    Alpha 0.975
    Scale 0.9
    +NOGRAVITY
    States
    {
    Spawn:
        NRGB ABCD 4 BRIGHT
        NRGB ABCD 4
        loop
    }
}

ACTOR Energy25_Dropped : Energy25
{
    States
    {
    Spawn:
        TNT1 A 0 A_JumpIfInventory("Health100",31,"RemoveCheck")
        TNT1 A 0 A_GiveInventory("Health100",1)
        NRGB ABCD 4 BRIGHT
        NRGB ABCD 4
        loop
    RemoveCheck:
        TNT1 A 0
        TNT1 A 0 A_TakeInventory("Health100",100)
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,16,0,0) == 1,"Spawn")
        TNT1 A 0
        stop
    }
}

actor Energy100 : Health //replaces Soulsphere
{
    Inventory.Amount 100
    Inventory.PickupMessage "Picked up a greater energy capsule."
    Inventory.PickupSound "health/50"
    Renderstyle Add
    Scale 0.75
    Alpha 0.975
    +NOGRAVITY
    States
    {
    Spawn:
        NRGD ABCD 4 BRIGHT
        NRGD ABCD 4
        loop
    }
}

/*actor Energy100 : Health replaces Megasphere
{
    Inventory.Amount 100
    Inventory.PickupMessage "Picked up a tank refill."
    Inventory.PickupSound "health/100"
    Renderstyle Add
    Scale 1.5
    Alpha 0.975
    +NOGRAVITY
    States
    {
    Spawn:
        NRGD ABCD 4 BRIGHT
        NRGD ABCD 4
        loop
    }
}*/

ACTOR MissileAmmo2 : MissileAmmo replaces ShellBox {}
ACTOR MissileAmmo3 : MissileAmmo replaces RocketAmmo {}
ACTOR MissileAmmo4 : MissileAmmo replaces RocketBox {}

ACTOR NothingAmmo1 : BlankPuff replaces Clip {}
ACTOR NothingAmmo2 : BlankPuff replaces ClipBox {}
ACTOR NothingAmmo3 : BlankPuff replaces Cell {}
ACTOR NothingAmmo4 : BlankPuff replaces CellPack {}

ACTOR NothingHealth1 : BlankPuff replaces HealthBonus {}

//ACTOR NothingWeapon1 : BlankPuff replaces Chainsaw {}
//ACTOR NothingWeapon2 : BlankPuff replaces Shotgun {}
//ACTOR NothingWeapon3 : BlankPuff replaces SuperShotgun {}
//ACTOR NothingWeapon4 : BlankPuff replaces Chaingun {}
//ACTOR NothingWeapon5 : BlankPuff replaces RocketLauncher {}
//ACTOR NothingWeapon6 : BlankPuff replaces PlasmaRifle {}
//ACTOR NothingWeapon7 : BlankPuff replaces BFG9000 {}

ACTOR NothingArmor1 : BlankPuff replaces ArmorBonus {}
//ACTOR NothingArmor2 : BlankPuff replaces GreenArmor {}
//ACTOR NothingArmor3 : BlankPuff replaces BlueArmor {}

ACTOR EnergyTankPickup : CustomInventory replaces Megasphere//replaces Berserk
{
    Inventory.PickupMessage "ENERGY TANK: ACQUIRED"
    Inventory.PickupSound "nrgtank/get"
    Inventory.RespawnTics 4200
    +AUTOACTIVATE
    +NOGRAVITY
    +FLOATBOB
    Scale 0.17
    States
    {
    Spawn:
        ETNK A 10 BRIGHT
        ETNK A 5
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("ETNotInThisLevel",1,"PickupFail")
        TNT1 A 0 A_JumpIfInventory("EnergyTankAcquired",10,"PickupFailCheck")
        TNT1 A 0 A_GiveInventory("EnergyTankAcquired",1)
        TNT1 A 0 ACS_ExecuteAlways(594,0,5,0,0)
        TNT1 A 0 A_SetBlend("White", 0.5, 16)
        TNT1 A 0 ACS_ExecuteAlways(594,0,7,0,0)//A_GiveInventory("NotInThisLevel",1)
        stop
    PickupFail:
        TNT1 A 0
        fail
    PickupFailCheck:
        TNT1 A 0
        TNT1 A 0 A_JumpIfHealthLower(1100,1)
        goto PickupFail
        TNT1 A 0
        TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_GiveInventory("Medikit",1)
        TNT1 AAAAAAAAAAAAAAAAAAAAAA 0 A_GiveInventory("Medikit",1)
        TNT1 A 0 A_SetBlend("White", 0.5, 16)
        stop
    }
}

ACTOR MissileTankPickup : CustomInventory replaces Backpack
{
    Inventory.PickupMessage "MISSILE TANK: ACQUIRED"
    Inventory.PickupSound "nrgtank/get"
    +AUTOACTIVATE
    States
    {
    Spawn:
        MTNK S 20
        MTNK ABCDEFGHIJKLMNOPQRS 1 BRIGHT
        loop
    Pickup:
        //TNT1 A 0 A_JumpIfInventory("NotInThisLevel",1,"PickupFail")
        TNT1 A 0 ACS_ExecuteAlways(594,0,6,0,0)
        TNT1 A 0 A_SetBlend("White", 0.5, 16)
        TNT1 A 0 A_GiveInventory("MissileTankAcquired",1)
        //TNT1 A 0 ACS_ExecuteAlways(594,0,7,0,0)//A_GiveInventory("NotInThisLevel",1)
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

ACTOR SuperMissileTankPickup : CustomInventory replaces GreenArmor 17522
{
    Inventory.PickupMessage "SUPER MISSILE TANK: ACQUIRED"
    Inventory.PickupSound "nrgtank/get"
    Inventory.RespawnTics 4200
    +AUTOACTIVATE
    States
    {
    Spawn:
        STNK S 20
        STNK ABCDEFGHIJKLMNOPQRS 1 BRIGHT
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("SMNotInThisLevel",1,"PickupFail")
        TNT1 A 0 ACS_ExecuteAlways(594,0,9,0,0)
        TNT1 A 0 A_SetBlend("White", 0.5, 16)
        TNT1 A 0 A_GiveInventory("SuperMissileAcquired",1)
        TNT1 A 0 ACS_ExecuteAlways(594,0,14,0,0)//A_GiveInventory("NotInThisLevel",1)
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

ACTOR EnemyDropSpawner
{
    Radius 1
    Height 1
    +NOCLIP
    -SOLID
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,10,0,0) == 1, "Nope")
        TNT1 A 0 A_SpawnItemEx("EnemyDropSpawner1",random(-5,5),random(-5,5),random(1,10),0,0,0,0,32,0)
        stop
    Nope:
        TNT1 A 1
        stop
    }
}

ACTOR EnemyDropSpawnerB
{
    Radius 1
    Height 1
    +NOCLIP
    -SOLID
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,10,0,0) == 1, "Nope")
        TNT1 A 0 A_SpawnItemEx("EnemyDropSpawner2",random(-5,5),random(-5,5),random(1,10),0,0,0,0,32,0)
        stop
    Nope:
        TNT1 A 1
        stop
    }
}

ACTOR EnemyDropSpawnerC
{
    Radius 1
    Height 1
    +NOCLIP
    -SOLID
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,10,0,0) == 1, "Nope")
        TNT1 A 0 A_SpawnItemEx("EnemyDropSpawner3",random(-5,5),random(-5,5),random(1,10),0,0,0,0,32,0)
        stop
    Nope:
        TNT1 A 1
        stop
    }
}

ACTOR EnemyDropSpawnerD
{
    Radius 1
    Height 1
    +NOCLIP
    -SOLID
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,10,0,0) == 1, "Nope")
        TNT1 A 0 A_SpawnItemEx("EnemyDropSpawner4",random(-5,5),random(-5,5),random(1,10),0,0,0,0,32,0)
        stop
    Nope:
        TNT1 A 1
        stop
    }
}

ACTOR SoulsphereSpawner : CustomInventory replaces Soulsphere
{
    Radius 1
    Height 1
    +NOCLIP
    -SOLID
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_JumpIf(ACS_ExecuteWithResult(594,11,0,0) == 1, "SpawnDM")
        TNT1 A 0
        TNT1 A 0 A_SpawnItemEx("SoulsphereSpawner1",0,0,0,0,0,0,0,32)
        stop
    SpawnDM:
        TNT1 A 0
        TNT1 A 0 A_SpawnItemEx("SoulsphereSpawner2",0,0,0,0,0,0,0,32)
        stop
    }
}

ACTOR EnemyDropSpawner1 : RandomSpawner
{
    +DROPPED
    DropItem "Energy10_Dropped", 175, 15
    DropItem "Energy25_Dropped", 100, 10
    DropItem "MissileAmmo_Dropped", 150, 5
}

ACTOR EnemyDropSpawner2 : RandomSpawner
{
    +DROPPED
    DropItem "Energy10_Dropped", 175, 15
    DropItem "Energy25_Dropped", 100, 10
    DropItem "MissileAmmo_Dropped", 150, 5
    DropItem "SuperMissileAmmo_Dropped", 125, 3
}

ACTOR EnemyDropSpawner3 : RandomSpawner
{
    +DROPPED
    DropItem "Energy10_Dropped", 175, 15
    DropItem "Energy25_Dropped", 100, 10
    DropItem "MissileAmmo_Dropped", 150, 5
    DropItem "PowerBombAmmo_Dropped", 100, 2
}

ACTOR EnemyDropSpawner4 : RandomSpawner
{
    +DROPPED
    DropItem "Energy10_Dropped", 175, 15
    DropItem "Energy25_Dropped", 100, 10
    DropItem "MissileAmmo_Dropped", 150, 5
    DropItem "SuperMissileAmmo_Dropped", 125, 3
    DropItem "PowerBombAmmo_Dropped", 100, 2
}

ACTOR SoulsphereSpawner1 : RandomSpawner // Hack, hack, hack.
{
    DropItem "Energy100", 255
}

ACTOR SoulsphereSpawner2 : RandomSpawner
{
    DropItem "EnergyTankPickup", 255
}

ACTOR SpaceJumpPickup : CustomInventory replaces Allmap 17520
{
    Inventory.PickupMessage "SPACE JUMP: ACQUIRED"
    Inventory.PickupSound "nrgtank/get"
    Renderstyle Add
    Alpha 0.9
    +AUTOACTIVATE
    +NOGRAVITY
    +FLOATBOB
    Scale 0.175
    States
    {
    Spawn:
        SJMP A 10 BRIGHT
        SJMP A 5
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("SpaceJumpAcquired",1,"PickupFail")
        TNT1 A 0 A_GiveInventory("SpaceJumpAcquired",1)
        TNT1 A 0 A_GiveInventory("CanSpaceJump",1)
        TNT1 A 0 A_SetBlend("White", 0.5, 16)
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

ACTOR SpeedBoosterPickup : CustomInventory replaces RadSuit
{
    Inventory.PickupMessage "SPEED BOOSTER: ACQUIRED"
    Inventory.PickupSound "nrgtank/get"
    +AUTOACTIVATE
    +NOGRAVITY
    +FLOATBOB
    States
    {
    Spawn:
        SPBS A 10
        SPBS B 5 BRIGHT
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("SpeedBoosterAcquired",1,"PickupFail")
        TNT1 A 0 A_GiveInventory("SpeedBoosterAcquired",1)
        TNT1 A 0 A_SetBlend("White", 0.5, 16)
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

ACTOR PowerBombTankPickup : CustomInventory replaces Berserk 17523
{
    Inventory.PickupMessage "POWER BOMB TANK: ACQUIRED"
    Inventory.PickupSound "nrgtank/get"
    Inventory.RespawnTics 4200
    +AUTOACTIVATE
    States
    {
    Spawn:
        BTNK S 20
        BTNK ABCDEFGHIJKLMNOPQRS 1 BRIGHT
        loop
    Pickup:
        TNT1 A 0 A_JumpIfInventory("PBNotInThisLevel",1,"PickupFail")
        TNT1 A 0 ACS_ExecuteAlways(594,0,12,0,0)
        TNT1 A 0 A_SetBlend("White", 0.5, 16)
        TNT1 A 0 A_GiveInventory("PowerBombAcquired",1)
        TNT1 A 0 ACS_ExecuteAlways(594,0,15,0,0)//A_GiveInventory("NotInThisLevel",1)
        stop
    PickupFail:
        TNT1 A 0
        fail
    }
}

/*ACTOR BerserkSpawner1 : RandomSpawner replaces Berserk
{
    DropItem "SuperMissileTankPickup", 255
    DropItem "PowerBombTankPickup", 255
}*/

actor RawEnergy : CustomInventory replaces BlueArmor
{
    RenderStyle Add
    Alpha 0.95
    Scale 0.65
    +ALWAYSPICKUP
    +AUTOACTIVATE
    +NOGRAVITY
    Inventory.PickupMessage "ACQUIRED: Raw Energy Deposit"
    Inventory.PickupSound "rawenergy/get"
    States
    {
    Spawn:
        TNT1 A 0
        TNT1 A 0 A_PlaySound("rawenergy/idle")
        EFLD WWWWWWWWWW 2 BRIGHT A_SpawnItemEx("LascannonBurstHaze2",0,0,20,random(-100,100)/250.0,random(-100,100)/250.0,random(-100,100)/250.0,0,32) // 10x2 = 20
        EFLD WWWWW 2 BRIGHT A_SpawnItemEx("LascannonBurstHaze2",0,0,20,random(-100,100)/250.0,random(-100,100)/250.0,random(-100,100)/250.0,0,32) // 5x2 = 10
        EFLD ABCDEFGHIJKLMNOPQRSTUV 2 BRIGHT A_SpawnItemEx("LascannonBurstHaze2",0,0,20,random(-100,100)/250.0,random(-100,100)/250.0,random(-100,100)/250.0,0,32)
        loop
    Pickup:
        TNT1 A 0
        TNT1 A 0 A_SetBlend("White", 0.5, 35)
        TNT1 A 0 A_GiveInventory("RawEnergyShield",1)
        stop
    }
}

actor RawEnergyShield : BasicArmorPickup
{
    Armor.SavePercent 100
    Armor.SaveAmount 150
    DamageFactor "Normal", 0.5 // For PvE.
    DamageFactor "PowerBeam", 0.9
    DamageFactor "PowerCharged", 0.9
    DamageFactor "SpazerBeam", 0.9
    DamageFactor "PlasmaBeam", 0.9
    DamageFactor "PlasmaCharged", 0.9
    DamageFactor "WaveBeam", 0.9
    DamageFactor "WaveCharged", 0.9
    DamageFactor "IceBeam", 0.9
    DamageFactor "IceCharged", 0.9
    DamageFactor "IceBeamExplode", 0.9
    DamageFactor "IceChargedExplode", 0.9
    DamageFactor "LongBeam", 0.9
    DamageFactor "LongCharged", 0.9
    DamageFactor "DoomCannon", 0.9
    DamageFactor "Missile", 0.9
    DamageFactor "SuperMissile", 0.9
    DamageFactor "BoostBall", 0.9
    DamageFactor "Bomb", 0.9
    DamageFactor "PowerBomb", 0.9 // In PvP, however, it only adds 10% resistance to everything.
}

actor RawEnergyShield2 : RawEnergyShield { Armor.SaveAmount 1 }